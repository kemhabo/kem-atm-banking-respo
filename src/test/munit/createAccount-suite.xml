<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="createAccount-suite.xml" />
	<munit:test name="createAccountSub_Flow-existingAcc" doc:id="ef00ac97-3359-4003-8399-140a4cf3465f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="15e51e60-3b1f-4edf-ac80-10157e5defa8" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d698afd2-58b1-49ce-ba73-f74b00daf361" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowexistingAcc\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowexistingAcc\mock_variable_.dwl')]" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowexistingAcc\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowexistingAcc\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowexistingAcc\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="e37f1da9-7174-4282-b5e9-d4a784218c72">
				<munit:payload value="#[output application/json --- readUrl('classpath://createAccountSubFlowexistingAcc\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://createAccountSubFlowexistingAcc\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowexistingAcc\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to createAccountSub_Flow" doc:id="c18ae4c6-6bb0-4f31-aa57-39ec5adab2f1" name="createAccountSub_Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6fb24cfa-c145-4f87-bcca-b9426a8e57c5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import createAccountSubFlowexistingAcc::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="createAccountSub_Flow-Success" doc:id="b90b3d79-b05a-46ee-ba26-d9da54feea38" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="2c7f872e-bcad-4651-99ac-37ab3fc61fc6" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d698afd2-58b1-49ce-ba73-f74b00daf361" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_.dwl')]" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Create object" doc:id="9c6418d8-2d06-490a-be43-e789ec4568b8" processor="s3:create-object">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fb60bca6-20e4-490a-bbc8-fd09d9981ffb" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_4.dwl')]" />
						<munit-tools:variable key="select-all" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_6.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_8.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="2e64d95a-f340-48ed-b568-de88f425275d" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="79d09744-2d48-4617-b4df-ea3bac2bf547" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_9.dwl')]" />
						<munit-tools:variable key="select-all" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_10.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_11.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_12.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_13.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Insert" doc:id="16b42a03-e402-462e-a07c-3b8c7dafd2b6" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a65a0ebf-1ec4-456f-81d4-0fd7cf1642cd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_14.dwl')]" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_15.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_16.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_17.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Send" doc:id="ef92bf4f-5977-42bd-803d-3f0871784c1f" processor="email:send">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="edf34528-5726-46df-b2e2-5bd0f48adfd4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_18.dwl')]" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_19.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_20.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_21.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6d348913-15b9-4327-9ea6-7e3b9cf35666" >
				<munit:payload value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://createAccountSubFlowSuccess\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to createAccountSub_Flow" doc:id="700056d8-e477-4b3a-a42b-0254743d714f" name="createAccountSub_Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="fef28899-5247-4e2a-97db-e9d0d0a1f6f7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import createAccountSubFlowSuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	
	<munit:test name="createAccountSub_Flow-Error" doc:id="b90b3d79-b05a-46ee-ba26-d9da54feea38" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="2c7f872e-bcad-4651-99ac-37ab3fc61fc6" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d698afd2-58b1-49ce-ba73-f74b00daf361" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_.dwl')]" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Create object" doc:id="9c6418d8-2d06-490a-be43-e789ec4568b8" processor="s3:create-object">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fb60bca6-20e4-490a-bbc8-fd09d9981ffb" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_4.dwl')]" />
						<munit-tools:variable key="select-all" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_6.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_8.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="2e64d95a-f340-48ed-b568-de88f425275d" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="79d09744-2d48-4617-b4df-ea3bac2bf547" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_9.dwl')]" />
						<munit-tools:variable key="select-all" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_10.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_11.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_12.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_13.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Insert" doc:id="16b42a03-e402-462e-a07c-3b8c7dafd2b6" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a65a0ebf-1ec4-456f-81d4-0fd7cf1642cd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_14.dwl')]" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_15.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_16.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_17.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Send" doc:id="ef92bf4f-5977-42bd-803d-3f0871784c1f" processor="email:send">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="edf34528-5726-46df-b2e2-5bd0f48adfd4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_payload4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\mock_variable_18.dwl')]" />
						<munit-tools:variable key="atmTrans" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_19.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="hab" value="#[output application/java --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_20.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\mock_variable_21.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6d348913-15b9-4327-9ea6-7e3b9cf35666" >
				<munit:payload value="#[output application/json --- readUrl('classpath://createAccountSubFlowSuccess\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://createAccountSubFlowSuccess\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://createAccountSubFlowSuccess\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="f07685ad-d1ea-4313-beb4-e0a557fb3a2a" >
				<flow-ref doc:name="Flow-ref to createAccountSub_Flow" doc:id="700056d8-e477-4b3a-a42b-0254743d714f" name="createAccountSub_Flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="897bdbab-6af2-40d7-bb3e-1c3141f596b4" >
						<logger level="INFO" doc:name="Logger" doc:id="e49aeb57-6a11-4fbb-81a9-e1b0ddc8e7b0" message="********CONTINUE!!!!!!!!!"/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="b5f75a29-d12c-424e-b89b-26a50ea2088c" expression="#[error]" is="#[MunitTools::equalTo(error.description)]"/>

		</munit:validation>
	
</munit:test>	
	
	


</mule>
